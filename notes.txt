
ex. of /var/lib/tftpboot/pxelinux.cfg/01-MACADDRESS #### master node
~~~
default menu.c32
prompt 0
timeout 0
menu title **** OpenShift 4 MASTER PXE Boot Menu ****

label Install RHCOS 4.6.1 Master Node
 kernel http://192.168.50.254:8080/openshift4/images/rhcos-4.6.1-x86_64-live-kernel-x86_64
 append ip=dhcp rd.neednet=1 coreos.inst.install_dev=vda console=tty0 console=ttyS0 coreos.inst=yes coreos.live.rootfs_url=http://192.168.50.254:8080/openshift4/images/rhcos-4.6.1-x86_64-live-rootfs.x86_64.img coreos.inst.ignition_url=http://192.168.50.254:8080/openshift4/4.6.4/ignitions/master.ign initrd=http://192.168.50.254:8080/openshift4/images/rhcos-4.6.1-x86_64-live-initramfs.x86_64.img
~~~

ex. of /etc/dhcp/dhcpd.conf

~~~
ddns-update-style interim;
ignore client-updates;
authoritative;
allow booting;
allow bootp;
allow unknown-clients;
# Set default and max IP lease time to infinite  with -1 value
default-lease-time -1;
max-lease-time -1;

subnet 192.168.50.0 netmask 255.255.255.0 {
        option routers 192.168.50.254;
        option domain-name-servers 192.168.50.254;
        option ntp-servers 103.16.182.23,103.16.182.214;
        option domain-search "ocp4.example.com","example.com";
        filename "pxelinux.0";
        next-server 192.168.50.254;
                  host master01.ocp4.example.com { hardware ethernet 52:54:00:00:32:0A; fixed-address 192.168.50.10; option host-name "master01"; }
                  host master02.ocp4.example.com { hardware ethernet 52:54:00:00:32:0B; fixed-address 192.168.50.11; option host-name "master02"; }
                  host master03.ocp4.example.com { hardware ethernet 52:54:00:00:32:0C; fixed-address 192.168.50.12; option host-name "master03"; }
                          host bootstrap.ocp4.example.com { hardware ethernet 52:54:00:00:32:09; fixed-address 192.168.50.9; option host-name "bootstrap"; }
                          host worker01.ocp4.example.com { hardware ethernet 52:54:00:00:32:0D; fixed-address 192.168.50.13; option host-name "worker01"; }
                  host worker02.ocp4.example.com { hardware ethernet 52:54:00:00:32:0E; fixed-address 192.168.50.14; option host-name "worker02"; }
        }
~~~


commands:
### as root
wget https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable-4.9/openshift-client-linux.tar.gz
wget wget https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable-4.9/openshift-install-linux.tar.gz

tar -xvf openshift-install-linux.tar.gz -C /usr/bin/
tar -xvf openshift-client-linux.tar.gz -C /usr/bin/

oc completion bash > /etc/bash_completion.d/openshift
openshift-install completion bash > /etc/bash_completion.d/openshift-install
### as root

### as kni
ssh-keygen -t ed25519 -f /home/kni/.ssh/ocp4 -N ''

export VERSION=stable-4.9
export RELEASE_IMAGE=$(curl -s https://mirror.openshift.com/pub/openshift-v4/clients/ocp/$VERSION/release.txt | grep 'Pull From: quay.io' | awk -F ' ' '{print $3}')

export cmd=openshift-baremetal-install
export pullsecret_file=~/pull-secret.txt
export extract_dir=$(pwd)

goto https://console.redhat.com/openshift/install/metal/installer-provisioned
write pull-secret.txt

oc adm release extract --registry-config "${pullsecret_file}" --command=$cmd --to "${extract_dir}" ${RELEASE_IMAGE}
sudo cp openshift-baremetal-install /usr/bin

sudo dnf install -y podman

mkdir /home/kni/rhcos_image_cache
sudo semanage fcontext -a -t httpd_sys_content_t "/home/kni/rhcos_image_cache(/.*)?"
sudo restorecon -Rv rhcos_image_cache/

sudo dnf install -y libvirt qemu-kvm mkisofs python3-devel jq ipmitool
sudo usermod --append --groups libvirt kni
sudo systemctl enable libvirtd --now
sudo virsh pool-define-as --name default --type dir --target /var/lib/libvirt/images
sudo virsh pool-start default
sudo virsh pool-autostart default

export COMMIT_ID=$(/usr/bin/openshift-baremetal-install version | grep '^built from commit' | awk '{print $4}')
export RHCOS_OPENSTACK_URI=$(curl -s -S https://raw.githubusercontent.com/openshift/installer/$COMMIT_ID/data/data/rhcos.json  | jq .images.openstack.path | sed 's/"//g')
export RHCOS_QEMU_URI=$(curl -s -S https://raw.githubusercontent.com/openshift/installer/$COMMIT_ID/data/data/rhcos.json  | jq .images.qemu.path | sed 's/"//g')
export RHCOS_PATH=$(curl -s -S https://raw.githubusercontent.com/openshift/installer/$COMMIT_ID/data/data/rhcos.json | jq .baseURI | sed 's/"//g')
export RHCOS_QEMU_SHA_UNCOMPRESSED=$(curl -s -S https://raw.githubusercontent.com/openshift/installer/$COMMIT_ID/data/data/rhcos.json  | jq -r '.images.qemu["uncompressed-sha256"]')
export RHCOS_OPENSTACK_SHA_COMPRESSED=$(curl -s -S https://raw.githubusercontent.com/openshift/installer/$COMMIT_ID/data/data/rhcos.json  | jq -r '.images.openstack.sha256')

curl -L ${RHCOS_PATH}${RHCOS_QEMU_URI} -o /home/kni/rhcos_image_cache/${RHCOS_QEMU_URI}
curl -L ${RHCOS_PATH}${RHCOS_OPENSTACK_URI} -o /home/kni/rhcos_image_cache/${RHCOS_OPENSTACK_URI}

sudo restorecon -Rv /home/kni/rhcos_image_cache
podman run -d --name rhcos_image_cache -v /home/kni/rhcos_image_cache:/var/www/html -p 8080:8080/tcp registry.centos.org/centos/httpd-24-centos7:latest

export BAREMETAL_IP=$(ip addr show dev baremetal | awk '/inet /{print $2}' | cut -d"/" -f1)
export RHCOS_OPENSTACK_SHA256=$(zcat /home/kni/rhcos_image_cache/${RHCOS_OPENSTACK_URI} | sha256sum | awk '{print $1}')
export RHCOS_QEMU_SHA256=$(zcat /home/kni/rhcos_image_cache/${RHCOS_QEMU_URI} | sha256sum | awk '{print $1}')

export CLUSTER_OS_IMAGE="http://${BAREMETAL_IP}:8080/${RHCOS_OPENSTACK_URI}?sha256=${RHCOS_OPENSTACK_SHA256}"
export BOOTSTRAP_OS_IMAGE="http://${BAREMETAL_IP}:8080/${RHCOS_QEMU_URI}?sha256=${RHCOS_QEMU_SHA256}"

echo "${RHCOS_OPENSTACK_SHA256}  ${RHCOS_OPENSTACK_URI}" > /home/kni/rhcos_image_cache/rhcos-ootpa-latest.qcow2.md5sum

echo "    bootstrapOSImage=${BOOTSTRAP_OS_IMAGE}"
    bootstrapOSImage=http://192.168.201.50:8080/rhcos-49.84.202110081407-0-qemu.x86_64.qcow2.gz?sha256=88af7c3968a936edb96d759caef2e43473bb9f0bc3f37e89176f4f9d2ba91df5
echo "    clusterOSImage=${CLUSTER_OS_IMAGE}"
    clusterOSImage=http://192.168.201.50:8080/rhcos-49.84.202110081407-0-openstack.x86_64.qcow2.gz?sha256=bbbb9243f084fc330a2c95e0bf33708d68e17628f48086eac574dcb96d35df9e

openshift-baremetal-install create install-config --dir=${HOME}/ocp4-bm
> ssh-key
Platform > baremetal
Provisioning network > Managed
Provisioning Network CIDR 192.168.201.0/24
Provisioning bridge eth0

### as kni

nmcli connection add ifname br-2003 type bridge con-name br-2003
nmcli connection modify br-2003 ipv4.method disabled ipv6.method ignore
nmcli connection up br-2003
nmcli connection add type vlan con-name br0.2003 ifname br0.2003 dev br0 id 2003
nmcli connection modify br0.2003 master br-2003 slave-type bridge
nmcli connection up br0.2003





### new cmd
openshift-baremetal-install --dir ~/clusterconfigs create manifests

TODO: pullsecret errato

openshift-baremetal-install --dir ~/clusterconfigs --log-level debug create cluster
openshift-baremetal-install --dir /home/kni/ocp4-lab --log-level debug create cluster
openshift-baremetal-install --dir /home/kni/ocp4-lab --log-level debug wait-for bootstrap-complete
openshift-baremetal-install --dir /home/kni/ocp4-lab --log-level debug wait-for install-complete
### new cmd



~~~
DEBUG module.masters.ironic_node_v1.openshift-master-host[1]: Still creating... [59m51s elapsed] 
ERROR                                              
ERROR Error: could not contact Ironic API: timeout reached 
ERROR                                              
ERROR   on ../../../tmp/openshift-install--359771356/masters/main.tf line 1, in resource "ironic_node_v1" "openshift-master-host": 
ERROR    1: resource "ironic_node_v1" "openshift-master-host" { 
ERROR                                              
ERROR                                              
ERROR                                              
ERROR Error: could not contact Ironic API: timeout reached 
ERROR                                              
ERROR   on ../../../tmp/openshift-install--359771356/masters/main.tf line 1, in resource "ironic_node_v1" "openshift-master-host": 
ERROR    1: resource "ironic_node_v1" "openshift-master-host" { 
ERROR                                              
ERROR                                              
ERROR                                              
ERROR Error: could not contact Ironic API: context deadline exceeded 
ERROR                                              
ERROR   on ../../../tmp/openshift-install--359771356/masters/main.tf line 1, in resource "ironic_node_v1" "openshift-master-host": 
ERROR    1: resource "ironic_node_v1" "openshift-master-host" { 
ERROR                                              
ERROR                                              
FATAL failed to fetch Cluster: failed to generate asset "Cluster": failed to create cluster: failed to apply Terraform: error(BaremetalIronicAPITimeout) from Infrastructure Provider: Unable to the reach provisioning service. This failure can be caused by incorrect network/proxy settings, inability to download the machine operating system images, or other misconfiguration. Please check access to the bootstrap host, and for any failing services.

~~~
